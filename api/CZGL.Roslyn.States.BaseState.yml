### YamlMime:ManagedReference
items:
- uid: CZGL.Roslyn.States.BaseState
  commentId: T:CZGL.Roslyn.States.BaseState
  id: BaseState
  parent: CZGL.Roslyn.States
  children:
  - CZGL.Roslyn.States.BaseState.Code
  - CZGL.Roslyn.States.BaseState.Name
  - CZGL.Roslyn.States.BaseState.UseCode
  langs:
  - csharp
  - vb
  name: BaseState
  nameWithType: BaseState
  fullName: CZGL.Roslyn.States.BaseState
  type: Class
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/BaseState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: BaseState
    path: src/Src/CZGL.Roslyn/States/BaseState.cs
    startLine: 9
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  summary: "\n所有结构都具有的属性\n"
  example: []
  syntax:
    content: public class BaseState
    content.vb: Public Class BaseState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CZGL.Roslyn.States.BaseState.Name
  commentId: P:CZGL.Roslyn.States.BaseState.Name
  id: Name
  parent: CZGL.Roslyn.States.BaseState
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BaseState.Name
  fullName: CZGL.Roslyn.States.BaseState.Name
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/BaseState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Name
    path: src/Src/CZGL.Roslyn/States/BaseState.cs
    startLine: 14
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  summary: "\n名称\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: CZGL.Roslyn.States.BaseState.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CZGL.Roslyn.States.BaseState.UseCode
  commentId: P:CZGL.Roslyn.States.BaseState.UseCode
  id: UseCode
  parent: CZGL.Roslyn.States.BaseState
  langs:
  - csharp
  - vb
  name: UseCode
  nameWithType: BaseState.UseCode
  fullName: CZGL.Roslyn.States.BaseState.UseCode
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/BaseState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: UseCode
    path: src/Src/CZGL.Roslyn/States/BaseState.cs
    startLine: 16
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public bool UseCode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseCode As Boolean
  overload: CZGL.Roslyn.States.BaseState.UseCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CZGL.Roslyn.States.BaseState.Code
  commentId: P:CZGL.Roslyn.States.BaseState.Code
  id: Code
  parent: CZGL.Roslyn.States.BaseState
  langs:
  - csharp
  - vb
  name: Code
  nameWithType: BaseState.Code
  fullName: CZGL.Roslyn.States.BaseState.Code
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/BaseState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Code
    path: src/Src/CZGL.Roslyn/States/BaseState.cs
    startLine: 17
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public string Code { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Code As String
  overload: CZGL.Roslyn.States.BaseState.Code*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: CZGL.Roslyn.States
  commentId: N:CZGL.Roslyn.States
  name: CZGL.Roslyn.States
  nameWithType: CZGL.Roslyn.States
  fullName: CZGL.Roslyn.States
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Roslyn.States.BaseState.Name*
  commentId: Overload:CZGL.Roslyn.States.BaseState.Name
  name: Name
  nameWithType: BaseState.Name
  fullName: CZGL.Roslyn.States.BaseState.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CZGL.Roslyn.States.BaseState.UseCode*
  commentId: Overload:CZGL.Roslyn.States.BaseState.UseCode
  name: UseCode
  nameWithType: BaseState.UseCode
  fullName: CZGL.Roslyn.States.BaseState.UseCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CZGL.Roslyn.States.BaseState.Code*
  commentId: Overload:CZGL.Roslyn.States.BaseState.Code
  name: Code
  nameWithType: BaseState.Code
  fullName: CZGL.Roslyn.States.BaseState.Code
