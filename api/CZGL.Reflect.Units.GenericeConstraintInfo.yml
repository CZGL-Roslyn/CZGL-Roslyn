### YamlMime:ManagedReference
items:
- uid: CZGL.Reflect.Units.GenericeConstraintInfo
  commentId: T:CZGL.Reflect.Units.GenericeConstraintInfo
  id: GenericeConstraintInfo
  parent: CZGL.Reflect.Units
  children:
  - CZGL.Reflect.Units.GenericeConstraintInfo.#ctor(CZGL.Reflect.Shared.GenericKeyword,CZGL.Reflect.Shared.ConstraintLocation,System.String)
  - CZGL.Reflect.Units.GenericeConstraintInfo.Keyword
  - CZGL.Reflect.Units.GenericeConstraintInfo.Location
  - CZGL.Reflect.Units.GenericeConstraintInfo.Value
  langs:
  - csharp
  - vb
  name: GenericeConstraintInfo
  nameWithType: GenericeConstraintInfo
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo
  type: Struct
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GenericeConstraintInfo
    path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
    startLine: 10
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n表示泛型参数的一个约束信息\n"
  example: []
  syntax:
    content: public struct GenericeConstraintInfo
    content.vb: Public Structure GenericeConstraintInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.#ctor(CZGL.Reflect.Shared.GenericKeyword,CZGL.Reflect.Shared.ConstraintLocation,System.String)
  commentId: M:CZGL.Reflect.Units.GenericeConstraintInfo.#ctor(CZGL.Reflect.Shared.GenericKeyword,CZGL.Reflect.Shared.ConstraintLocation,System.String)
  id: '#ctor(CZGL.Reflect.Shared.GenericKeyword,CZGL.Reflect.Shared.ConstraintLocation,System.String)'
  parent: CZGL.Reflect.Units.GenericeConstraintInfo
  langs:
  - csharp
  - vb
  name: GenericeConstraintInfo(GenericKeyword, ConstraintLocation, String)
  nameWithType: GenericeConstraintInfo.GenericeConstraintInfo(GenericKeyword, ConstraintLocation, String)
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.GenericeConstraintInfo(CZGL.Reflect.Shared.GenericKeyword, CZGL.Reflect.Shared.ConstraintLocation, System.String)
  type: Constructor
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: .ctor
    path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
    startLine: 12
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  syntax:
    content: public GenericeConstraintInfo(GenericKeyword keyword, ConstraintLocation location, string value)
    parameters:
    - id: keyword
      type: CZGL.Reflect.Shared.GenericKeyword
    - id: location
      type: CZGL.Reflect.Shared.ConstraintLocation
    - id: value
      type: System.String
    content.vb: Public Sub New(keyword As GenericKeyword, location As ConstraintLocation, value As String)
  overload: CZGL.Reflect.Units.GenericeConstraintInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.Keyword
  commentId: P:CZGL.Reflect.Units.GenericeConstraintInfo.Keyword
  id: Keyword
  parent: CZGL.Reflect.Units.GenericeConstraintInfo
  langs:
  - csharp
  - vb
  name: Keyword
  nameWithType: GenericeConstraintInfo.Keyword
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.Keyword
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Keyword
    path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
    startLine: 22
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n泛型约束类型\n"
  example: []
  syntax:
    content: public GenericKeyword Keyword { get; }
    parameters: []
    return:
      type: CZGL.Reflect.Shared.GenericKeyword
    content.vb: Public ReadOnly Property Keyword As GenericKeyword
  overload: CZGL.Reflect.Units.GenericeConstraintInfo.Keyword*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.Location
  commentId: P:CZGL.Reflect.Units.GenericeConstraintInfo.Location
  id: Location
  parent: CZGL.Reflect.Units.GenericeConstraintInfo
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: GenericeConstraintInfo.Location
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.Location
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Location
    path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
    startLine: 27
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n泛型约束位置\n"
  example: []
  syntax:
    content: public ConstraintLocation Location { get; }
    parameters: []
    return:
      type: CZGL.Reflect.Shared.ConstraintLocation
    content.vb: Public ReadOnly Property Location As ConstraintLocation
  overload: CZGL.Reflect.Units.GenericeConstraintInfo.Location*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.Value
  commentId: P:CZGL.Reflect.Units.GenericeConstraintInfo.Value
  id: Value
  parent: CZGL.Reflect.Units.GenericeConstraintInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: GenericeConstraintInfo.Value
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.Value
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Value
    path: src/Src/CZGL.Reflect/Units/GenericeConstraintInfo.cs
    startLine: 32
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n泛型约束的值\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: CZGL.Reflect.Units.GenericeConstraintInfo.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CZGL.Reflect.Units
  commentId: N:CZGL.Reflect.Units
  name: CZGL.Reflect.Units
  nameWithType: CZGL.Reflect.Units
  fullName: CZGL.Reflect.Units
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.#ctor*
  commentId: Overload:CZGL.Reflect.Units.GenericeConstraintInfo.#ctor
  name: GenericeConstraintInfo
  nameWithType: GenericeConstraintInfo.GenericeConstraintInfo
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.GenericeConstraintInfo
- uid: CZGL.Reflect.Shared.GenericKeyword
  commentId: T:CZGL.Reflect.Shared.GenericKeyword
  parent: CZGL.Reflect.Shared
  name: GenericKeyword
  nameWithType: GenericKeyword
  fullName: CZGL.Reflect.Shared.GenericKeyword
- uid: CZGL.Reflect.Shared.ConstraintLocation
  commentId: T:CZGL.Reflect.Shared.ConstraintLocation
  parent: CZGL.Reflect.Shared
  name: ConstraintLocation
  nameWithType: ConstraintLocation
  fullName: CZGL.Reflect.Shared.ConstraintLocation
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CZGL.Reflect.Shared
  commentId: N:CZGL.Reflect.Shared
  name: CZGL.Reflect.Shared
  nameWithType: CZGL.Reflect.Shared
  fullName: CZGL.Reflect.Shared
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.Keyword*
  commentId: Overload:CZGL.Reflect.Units.GenericeConstraintInfo.Keyword
  name: Keyword
  nameWithType: GenericeConstraintInfo.Keyword
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.Keyword
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.Location*
  commentId: Overload:CZGL.Reflect.Units.GenericeConstraintInfo.Location
  name: Location
  nameWithType: GenericeConstraintInfo.Location
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.Location
- uid: CZGL.Reflect.Units.GenericeConstraintInfo.Value*
  commentId: Overload:CZGL.Reflect.Units.GenericeConstraintInfo.Value
  name: Value
  nameWithType: GenericeConstraintInfo.Value
  fullName: CZGL.Reflect.Units.GenericeConstraintInfo.Value
