### YamlMime:ManagedReference
items:
- uid: CZGL.Roslyn.States.NamespaceState
  commentId: T:CZGL.Roslyn.States.NamespaceState
  id: NamespaceState
  parent: CZGL.Roslyn.States
  children:
  - CZGL.Roslyn.States.NamespaceState.Classes
  - CZGL.Roslyn.States.NamespaceState.Delegates
  - CZGL.Roslyn.States.NamespaceState.Enums
  - CZGL.Roslyn.States.NamespaceState.Events
  - CZGL.Roslyn.States.NamespaceState.Interfaces
  - CZGL.Roslyn.States.NamespaceState.Structs
  - CZGL.Roslyn.States.NamespaceState.Usings
  langs:
  - csharp
  - vb
  name: NamespaceState
  nameWithType: NamespaceState
  fullName: CZGL.Roslyn.States.NamespaceState
  type: Class
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: NamespaceState
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 9
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  summary: "\n命名空间状态机\n"
  example: []
  syntax:
    content: public class NamespaceState
    content.vb: Public Class NamespaceState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CZGL.Roslyn.States.NamespaceState.Usings
  commentId: P:CZGL.Roslyn.States.NamespaceState.Usings
  id: Usings
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Usings
  nameWithType: NamespaceState.Usings
  fullName: CZGL.Roslyn.States.NamespaceState.Usings
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Usings
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 11
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<string> Usings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property Usings As HashSet(Of String)
  overload: CZGL.Roslyn.States.NamespaceState.Usings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Roslyn.States.NamespaceState.Interfaces
  commentId: P:CZGL.Roslyn.States.NamespaceState.Interfaces
  id: Interfaces
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Interfaces
  nameWithType: NamespaceState.Interfaces
  fullName: CZGL.Roslyn.States.NamespaceState.Interfaces
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Interfaces
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 13
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<InterfaceBuilder> Interfaces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{CZGL.Roslyn.InterfaceBuilder}
    content.vb: Public ReadOnly Property Interfaces As HashSet(Of InterfaceBuilder)
  overload: CZGL.Roslyn.States.NamespaceState.Interfaces*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Roslyn.States.NamespaceState.Structs
  commentId: P:CZGL.Roslyn.States.NamespaceState.Structs
  id: Structs
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Structs
  nameWithType: NamespaceState.Structs
  fullName: CZGL.Roslyn.States.NamespaceState.Structs
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Structs
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 14
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<StructBuilder> Structs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{CZGL.Roslyn.StructBuilder}
    content.vb: Public ReadOnly Property Structs As HashSet(Of StructBuilder)
  overload: CZGL.Roslyn.States.NamespaceState.Structs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Roslyn.States.NamespaceState.Classes
  commentId: P:CZGL.Roslyn.States.NamespaceState.Classes
  id: Classes
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Classes
  nameWithType: NamespaceState.Classes
  fullName: CZGL.Roslyn.States.NamespaceState.Classes
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Classes
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 15
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<ClassBuilder> Classes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{CZGL.Roslyn.ClassBuilder}
    content.vb: Public ReadOnly Property Classes As HashSet(Of ClassBuilder)
  overload: CZGL.Roslyn.States.NamespaceState.Classes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Roslyn.States.NamespaceState.Enums
  commentId: P:CZGL.Roslyn.States.NamespaceState.Enums
  id: Enums
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Enums
  nameWithType: NamespaceState.Enums
  fullName: CZGL.Roslyn.States.NamespaceState.Enums
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Enums
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 16
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<EnumBuilder> Enums { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{CZGL.Roslyn.EnumBuilder}
    content.vb: Public ReadOnly Property Enums As HashSet(Of EnumBuilder)
  overload: CZGL.Roslyn.States.NamespaceState.Enums*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Roslyn.States.NamespaceState.Delegates
  commentId: P:CZGL.Roslyn.States.NamespaceState.Delegates
  id: Delegates
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Delegates
  nameWithType: NamespaceState.Delegates
  fullName: CZGL.Roslyn.States.NamespaceState.Delegates
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Delegates
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 17
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<DelegateBuilder> Delegates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{CZGL.Roslyn.DelegateBuilder}
    content.vb: Public ReadOnly Property Delegates As HashSet(Of DelegateBuilder)
  overload: CZGL.Roslyn.States.NamespaceState.Delegates*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CZGL.Roslyn.States.NamespaceState.Events
  commentId: P:CZGL.Roslyn.States.NamespaceState.Events
  id: Events
  parent: CZGL.Roslyn.States.NamespaceState
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: NamespaceState.Events
  fullName: CZGL.Roslyn.States.NamespaceState.Events
  type: Property
  source:
    remote:
      path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: Events
    path: src/Src/CZGL.Roslyn/States/NamespaceState.cs
    startLine: 18
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.States
  syntax:
    content: public HashSet<EventBuilder> Events { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{CZGL.Roslyn.EventBuilder}
    content.vb: Public ReadOnly Property Events As HashSet(Of EventBuilder)
  overload: CZGL.Roslyn.States.NamespaceState.Events*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CZGL.Roslyn.States
  commentId: N:CZGL.Roslyn.States
  name: CZGL.Roslyn.States
  nameWithType: CZGL.Roslyn.States
  fullName: CZGL.Roslyn.States
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Roslyn.States.NamespaceState.Usings*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Usings
  name: Usings
  nameWithType: NamespaceState.Usings
  fullName: CZGL.Roslyn.States.NamespaceState.Usings
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CZGL.Roslyn.States.NamespaceState.Interfaces*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Interfaces
  name: Interfaces
  nameWithType: NamespaceState.Interfaces
  fullName: CZGL.Roslyn.States.NamespaceState.Interfaces
- uid: System.Collections.Generic.HashSet{CZGL.Roslyn.InterfaceBuilder}
  commentId: T:System.Collections.Generic.HashSet{CZGL.Roslyn.InterfaceBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<InterfaceBuilder>
  nameWithType: HashSet<InterfaceBuilder>
  fullName: System.Collections.Generic.HashSet<CZGL.Roslyn.InterfaceBuilder>
  nameWithType.vb: HashSet(Of InterfaceBuilder)
  fullName.vb: System.Collections.Generic.HashSet(Of CZGL.Roslyn.InterfaceBuilder)
  name.vb: HashSet(Of InterfaceBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CZGL.Roslyn.InterfaceBuilder
    name: InterfaceBuilder
    nameWithType: InterfaceBuilder
    fullName: CZGL.Roslyn.InterfaceBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CZGL.Roslyn.InterfaceBuilder
    name: InterfaceBuilder
    nameWithType: InterfaceBuilder
    fullName: CZGL.Roslyn.InterfaceBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: CZGL.Roslyn.States.NamespaceState.Structs*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Structs
  name: Structs
  nameWithType: NamespaceState.Structs
  fullName: CZGL.Roslyn.States.NamespaceState.Structs
- uid: System.Collections.Generic.HashSet{CZGL.Roslyn.StructBuilder}
  commentId: T:System.Collections.Generic.HashSet{CZGL.Roslyn.StructBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<StructBuilder>
  nameWithType: HashSet<StructBuilder>
  fullName: System.Collections.Generic.HashSet<CZGL.Roslyn.StructBuilder>
  nameWithType.vb: HashSet(Of StructBuilder)
  fullName.vb: System.Collections.Generic.HashSet(Of CZGL.Roslyn.StructBuilder)
  name.vb: HashSet(Of StructBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CZGL.Roslyn.StructBuilder
    name: StructBuilder
    nameWithType: StructBuilder
    fullName: CZGL.Roslyn.StructBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CZGL.Roslyn.StructBuilder
    name: StructBuilder
    nameWithType: StructBuilder
    fullName: CZGL.Roslyn.StructBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: CZGL.Roslyn.States.NamespaceState.Classes*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Classes
  name: Classes
  nameWithType: NamespaceState.Classes
  fullName: CZGL.Roslyn.States.NamespaceState.Classes
- uid: System.Collections.Generic.HashSet{CZGL.Roslyn.ClassBuilder}
  commentId: T:System.Collections.Generic.HashSet{CZGL.Roslyn.ClassBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<ClassBuilder>
  nameWithType: HashSet<ClassBuilder>
  fullName: System.Collections.Generic.HashSet<CZGL.Roslyn.ClassBuilder>
  nameWithType.vb: HashSet(Of ClassBuilder)
  fullName.vb: System.Collections.Generic.HashSet(Of CZGL.Roslyn.ClassBuilder)
  name.vb: HashSet(Of ClassBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CZGL.Roslyn.ClassBuilder
    name: ClassBuilder
    nameWithType: ClassBuilder
    fullName: CZGL.Roslyn.ClassBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CZGL.Roslyn.ClassBuilder
    name: ClassBuilder
    nameWithType: ClassBuilder
    fullName: CZGL.Roslyn.ClassBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: CZGL.Roslyn.States.NamespaceState.Enums*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Enums
  name: Enums
  nameWithType: NamespaceState.Enums
  fullName: CZGL.Roslyn.States.NamespaceState.Enums
- uid: System.Collections.Generic.HashSet{CZGL.Roslyn.EnumBuilder}
  commentId: T:System.Collections.Generic.HashSet{CZGL.Roslyn.EnumBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<EnumBuilder>
  nameWithType: HashSet<EnumBuilder>
  fullName: System.Collections.Generic.HashSet<CZGL.Roslyn.EnumBuilder>
  nameWithType.vb: HashSet(Of EnumBuilder)
  fullName.vb: System.Collections.Generic.HashSet(Of CZGL.Roslyn.EnumBuilder)
  name.vb: HashSet(Of EnumBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CZGL.Roslyn.EnumBuilder
    name: EnumBuilder
    nameWithType: EnumBuilder
    fullName: CZGL.Roslyn.EnumBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CZGL.Roslyn.EnumBuilder
    name: EnumBuilder
    nameWithType: EnumBuilder
    fullName: CZGL.Roslyn.EnumBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: CZGL.Roslyn.States.NamespaceState.Delegates*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Delegates
  name: Delegates
  nameWithType: NamespaceState.Delegates
  fullName: CZGL.Roslyn.States.NamespaceState.Delegates
- uid: System.Collections.Generic.HashSet{CZGL.Roslyn.DelegateBuilder}
  commentId: T:System.Collections.Generic.HashSet{CZGL.Roslyn.DelegateBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<DelegateBuilder>
  nameWithType: HashSet<DelegateBuilder>
  fullName: System.Collections.Generic.HashSet<CZGL.Roslyn.DelegateBuilder>
  nameWithType.vb: HashSet(Of DelegateBuilder)
  fullName.vb: System.Collections.Generic.HashSet(Of CZGL.Roslyn.DelegateBuilder)
  name.vb: HashSet(Of DelegateBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CZGL.Roslyn.DelegateBuilder
    name: DelegateBuilder
    nameWithType: DelegateBuilder
    fullName: CZGL.Roslyn.DelegateBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CZGL.Roslyn.DelegateBuilder
    name: DelegateBuilder
    nameWithType: DelegateBuilder
    fullName: CZGL.Roslyn.DelegateBuilder
  - name: )
    nameWithType: )
    fullName: )
- uid: CZGL.Roslyn.States.NamespaceState.Events*
  commentId: Overload:CZGL.Roslyn.States.NamespaceState.Events
  name: Events
  nameWithType: NamespaceState.Events
  fullName: CZGL.Roslyn.States.NamespaceState.Events
- uid: System.Collections.Generic.HashSet{CZGL.Roslyn.EventBuilder}
  commentId: T:System.Collections.Generic.HashSet{CZGL.Roslyn.EventBuilder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<EventBuilder>
  nameWithType: HashSet<EventBuilder>
  fullName: System.Collections.Generic.HashSet<CZGL.Roslyn.EventBuilder>
  nameWithType.vb: HashSet(Of EventBuilder)
  fullName.vb: System.Collections.Generic.HashSet(Of CZGL.Roslyn.EventBuilder)
  name.vb: HashSet(Of EventBuilder)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CZGL.Roslyn.EventBuilder
    name: EventBuilder
    nameWithType: EventBuilder
    fullName: CZGL.Roslyn.EventBuilder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CZGL.Roslyn.EventBuilder
    name: EventBuilder
    nameWithType: EventBuilder
    fullName: CZGL.Roslyn.EventBuilder
  - name: )
    nameWithType: )
    fullName: )
