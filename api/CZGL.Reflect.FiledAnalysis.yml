### YamlMime:ManagedReference
items:
- uid: CZGL.Reflect.FiledAnalysis
  commentId: T:CZGL.Reflect.FiledAnalysis
  id: FiledAnalysis
  parent: CZGL.Reflect
  children:
  - CZGL.Reflect.FiledAnalysis.GetAccess(System.Reflection.FieldInfo)
  - CZGL.Reflect.FiledAnalysis.GetAttributes(System.Reflection.FieldInfo)
  - CZGL.Reflect.FiledAnalysis.GetKeyword(System.Reflection.FieldInfo)
  langs:
  - csharp
  - vb
  name: FiledAnalysis
  nameWithType: FiledAnalysis
  fullName: CZGL.Reflect.FiledAnalysis
  type: Class
  source:
    remote:
      path: src/Src/CZGL.Reflect/FiledAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: FiledAnalysis
    path: src/Src/CZGL.Reflect/FiledAnalysis.cs
    startLine: 9
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect
  summary: "\n字段分析\n"
  example: []
  syntax:
    content: public static class FiledAnalysis
    content.vb: Public Module FiledAnalysis
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CZGL.Reflect.FiledAnalysis.GetAccess(System.Reflection.FieldInfo)
  commentId: M:CZGL.Reflect.FiledAnalysis.GetAccess(System.Reflection.FieldInfo)
  id: GetAccess(System.Reflection.FieldInfo)
  isExtensionMethod: true
  parent: CZGL.Reflect.FiledAnalysis
  langs:
  - csharp
  - vb
  name: GetAccess(FieldInfo)
  nameWithType: FiledAnalysis.GetAccess(FieldInfo)
  fullName: CZGL.Reflect.FiledAnalysis.GetAccess(System.Reflection.FieldInfo)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Reflect/FiledAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GetAccess
    path: src/Src/CZGL.Reflect/FiledAnalysis.cs
    startLine: 16
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect
  summary: "\n获取字段的访问权限修饰符\n"
  example: []
  syntax:
    content: public static MemberAccess GetAccess(this FieldInfo info)
    parameters:
    - id: info
      type: System.Reflection.FieldInfo
      description: ''
    return:
      type: CZGL.Reflect.Shared.MemberAccess
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAccess(info As FieldInfo) As MemberAccess
  overload: CZGL.Reflect.FiledAnalysis.GetAccess*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CZGL.Reflect.FiledAnalysis.GetKeyword(System.Reflection.FieldInfo)
  commentId: M:CZGL.Reflect.FiledAnalysis.GetKeyword(System.Reflection.FieldInfo)
  id: GetKeyword(System.Reflection.FieldInfo)
  isExtensionMethod: true
  parent: CZGL.Reflect.FiledAnalysis
  langs:
  - csharp
  - vb
  name: GetKeyword(FieldInfo)
  nameWithType: FiledAnalysis.GetKeyword(FieldInfo)
  fullName: CZGL.Reflect.FiledAnalysis.GetKeyword(System.Reflection.FieldInfo)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Reflect/FiledAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GetKeyword
    path: src/Src/CZGL.Reflect/FiledAnalysis.cs
    startLine: 26
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect
  summary: "\n获取修饰符\n"
  example: []
  syntax:
    content: public static FieldKeyword GetKeyword(this FieldInfo info)
    parameters:
    - id: info
      type: System.Reflection.FieldInfo
      description: ''
    return:
      type: CZGL.Reflect.Shared.FieldKeyword
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetKeyword(info As FieldInfo) As FieldKeyword
  overload: CZGL.Reflect.FiledAnalysis.GetKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CZGL.Reflect.FiledAnalysis.GetAttributes(System.Reflection.FieldInfo)
  commentId: M:CZGL.Reflect.FiledAnalysis.GetAttributes(System.Reflection.FieldInfo)
  id: GetAttributes(System.Reflection.FieldInfo)
  isExtensionMethod: true
  parent: CZGL.Reflect.FiledAnalysis
  langs:
  - csharp
  - vb
  name: GetAttributes(FieldInfo)
  nameWithType: FiledAnalysis.GetAttributes(FieldInfo)
  fullName: CZGL.Reflect.FiledAnalysis.GetAttributes(System.Reflection.FieldInfo)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Reflect/FiledAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GetAttributes
    path: src/Src/CZGL.Reflect/FiledAnalysis.cs
    startLine: 35
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect
  summary: "\n获取特性列表\n"
  example: []
  syntax:
    content: public static string[] GetAttributes(this FieldInfo info)
    parameters:
    - id: info
      type: System.Reflection.FieldInfo
    return:
      type: System.String[]
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttributes(info As FieldInfo) As String()
  overload: CZGL.Reflect.FiledAnalysis.GetAttributes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CZGL.Reflect
  commentId: N:CZGL.Reflect
  name: CZGL.Reflect
  nameWithType: CZGL.Reflect
  fullName: CZGL.Reflect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Reflect.FiledAnalysis.GetAccess*
  commentId: Overload:CZGL.Reflect.FiledAnalysis.GetAccess
  name: GetAccess
  nameWithType: FiledAnalysis.GetAccess
  fullName: CZGL.Reflect.FiledAnalysis.GetAccess
- uid: System.Reflection.FieldInfo
  commentId: T:System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: CZGL.Reflect.Shared.MemberAccess
  commentId: T:CZGL.Reflect.Shared.MemberAccess
  parent: CZGL.Reflect.Shared
  name: MemberAccess
  nameWithType: MemberAccess
  fullName: CZGL.Reflect.Shared.MemberAccess
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: CZGL.Reflect.Shared
  commentId: N:CZGL.Reflect.Shared
  name: CZGL.Reflect.Shared
  nameWithType: CZGL.Reflect.Shared
  fullName: CZGL.Reflect.Shared
- uid: CZGL.Reflect.FiledAnalysis.GetKeyword*
  commentId: Overload:CZGL.Reflect.FiledAnalysis.GetKeyword
  name: GetKeyword
  nameWithType: FiledAnalysis.GetKeyword
  fullName: CZGL.Reflect.FiledAnalysis.GetKeyword
- uid: CZGL.Reflect.Shared.FieldKeyword
  commentId: T:CZGL.Reflect.Shared.FieldKeyword
  parent: CZGL.Reflect.Shared
  name: FieldKeyword
  nameWithType: FieldKeyword
  fullName: CZGL.Reflect.Shared.FieldKeyword
- uid: CZGL.Reflect.FiledAnalysis.GetAttributes*
  commentId: Overload:CZGL.Reflect.FiledAnalysis.GetAttributes
  name: GetAttributes
  nameWithType: FiledAnalysis.GetAttributes
  fullName: CZGL.Reflect.FiledAnalysis.GetAttributes
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
