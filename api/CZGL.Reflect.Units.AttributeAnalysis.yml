### YamlMime:ManagedReference
items:
- uid: CZGL.Reflect.Units.AttributeAnalysis
  commentId: T:CZGL.Reflect.Units.AttributeAnalysis
  id: AttributeAnalysis
  parent: CZGL.Reflect.Units
  children:
  - CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine(System.Type)
  - CZGL.Reflect.Units.AttributeAnalysis.GetAttributes(System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData})
  - CZGL.Reflect.Units.AttributeAnalysis.GetAttributes``1(``0)
  langs:
  - csharp
  - vb
  name: AttributeAnalysis
  nameWithType: AttributeAnalysis
  fullName: CZGL.Reflect.Units.AttributeAnalysis
  type: Class
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: AttributeAnalysis
    path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
    startLine: 12
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n特性反解器\n"
  example: []
  syntax:
    content: public static class AttributeAnalysis
    content.vb: Public Module AttributeAnalysis
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine(System.Type)
  commentId: M:CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine(System.Type)
  id: GetAttributeDefine(System.Type)
  isExtensionMethod: true
  parent: CZGL.Reflect.Units.AttributeAnalysis
  langs:
  - csharp
  - vb
  name: GetAttributeDefine(Type)
  nameWithType: AttributeAnalysis.GetAttributeDefine(Type)
  fullName: CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine(System.Type)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GetAttributeDefine
    path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
    startLine: 18
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n获取当前类型的特性信息列表\n"
  example: []
  syntax:
    content: public static AttributeDefine[] GetAttributeDefine(this Type type)
    parameters:
    - id: type
      type: System.Type
    return:
      type: CZGL.Reflect.Models.AttributeDefine[]
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttributeDefine(type As Type) As AttributeDefine()
  overload: CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes``1(``0)
  commentId: M:CZGL.Reflect.Units.AttributeAnalysis.GetAttributes``1(``0)
  id: GetAttributes``1(``0)
  isExtensionMethod: true
  parent: CZGL.Reflect.Units.AttributeAnalysis
  langs:
  - csharp
  - vb
  name: GetAttributes<T>(T)
  nameWithType: AttributeAnalysis.GetAttributes<T>(T)
  fullName: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes<T>(T)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GetAttributes
    path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
    startLine: 31
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n获取成员的特性列表\n"
  example: []
  syntax:
    content: >-
      public static string[] GetAttributes<T>(this T info)

          where T : MemberInfo
    parameters:
    - id: info
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.String[]
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttributes(Of T As MemberInfo)(info As T) As String()
  overload: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes*
  nameWithType.vb: AttributeAnalysis.GetAttributes(Of T)(T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes(Of T)(T)
  name.vb: GetAttributes(Of T)(T)
- uid: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes(System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData})
  commentId: M:CZGL.Reflect.Units.AttributeAnalysis.GetAttributes(System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData})
  id: GetAttributes(System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData})
  isExtensionMethod: true
  parent: CZGL.Reflect.Units.AttributeAnalysis
  langs:
  - csharp
  - vb
  name: GetAttributes(IEnumerable<CustomAttributeData>)
  nameWithType: AttributeAnalysis.GetAttributes(IEnumerable<CustomAttributeData>)
  fullName: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes(System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: GetAttributes
    path: src/Src/CZGL.Reflect/Units/AttributeAnalysis.cs
    startLine: 41
  assemblies:
  - CZGL.Reflect
  namespace: CZGL.Reflect.Units
  summary: "\n解析输出类型、方法、属性、字段等特性\n"
  example: []
  syntax:
    content: public static string[] GetAttributes(this IEnumerable<CustomAttributeData> attrs)
    parameters:
    - id: attrs
      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
      description: ''
    return:
      type: System.String[]
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetAttributes(attrs As IEnumerable(Of CustomAttributeData)) As String()
  overload: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes*
  nameWithType.vb: AttributeAnalysis.GetAttributes(IEnumerable(Of CustomAttributeData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes(System.Collections.Generic.IEnumerable(Of System.Reflection.CustomAttributeData))
  name.vb: GetAttributes(IEnumerable(Of CustomAttributeData))
references:
- uid: CZGL.Reflect.Units
  commentId: N:CZGL.Reflect.Units
  name: CZGL.Reflect.Units
  nameWithType: CZGL.Reflect.Units
  fullName: CZGL.Reflect.Units
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine*
  commentId: Overload:CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine
  name: GetAttributeDefine
  nameWithType: AttributeAnalysis.GetAttributeDefine
  fullName: CZGL.Reflect.Units.AttributeAnalysis.GetAttributeDefine
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: CZGL.Reflect.Models.AttributeDefine[]
  isExternal: true
  name: AttributeDefine[]
  nameWithType: AttributeDefine[]
  fullName: CZGL.Reflect.Models.AttributeDefine[]
  nameWithType.vb: AttributeDefine()
  fullName.vb: CZGL.Reflect.Models.AttributeDefine()
  name.vb: AttributeDefine()
  spec.csharp:
  - uid: CZGL.Reflect.Models.AttributeDefine
    name: AttributeDefine
    nameWithType: AttributeDefine
    fullName: CZGL.Reflect.Models.AttributeDefine
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CZGL.Reflect.Models.AttributeDefine
    name: AttributeDefine
    nameWithType: AttributeDefine
    fullName: CZGL.Reflect.Models.AttributeDefine
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes*
  commentId: Overload:CZGL.Reflect.Units.AttributeAnalysis.GetAttributes
  name: GetAttributes
  nameWithType: AttributeAnalysis.GetAttributes
  fullName: CZGL.Reflect.Units.AttributeAnalysis.GetAttributes
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CustomAttributeData>
  nameWithType: IEnumerable<CustomAttributeData>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>
  nameWithType.vb: IEnumerable(Of CustomAttributeData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.CustomAttributeData)
  name.vb: IEnumerable(Of CustomAttributeData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.CustomAttributeData
    name: CustomAttributeData
    nameWithType: CustomAttributeData
    fullName: System.Reflection.CustomAttributeData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
