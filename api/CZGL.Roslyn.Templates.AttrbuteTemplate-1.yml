### YamlMime:ManagedReference
items:
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  commentId: T:CZGL.Roslyn.Templates.AttrbuteTemplate`1
  id: AttrbuteTemplate`1
  parent: CZGL.Roslyn.Templates
  children:
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1._attribute
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1._TBuilder
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFormatCode
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFullCode
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor(System.String)
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor(System.String[])
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithName(System.String)
  - CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithProperty(System.String[])
  langs:
  - csharp
  - vb
  name: AttrbuteTemplate<TBuilder>
  nameWithType: AttrbuteTemplate<TBuilder>
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>
  type: Class
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: AttrbuteTemplate
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 10
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n特性构建器\n"
  example: []
  syntax:
    content: >-
      public abstract class AttrbuteTemplate<TBuilder>

          where TBuilder : AttrbuteTemplate<TBuilder>
    typeParameters:
    - id: TBuilder
      description: ''
    content.vb: Public MustInherit Class AttrbuteTemplate(Of TBuilder As AttrbuteTemplate(Of TBuilder))
  inheritance:
  - System.Object
  derivedClasses:
  - CZGL.Roslyn.AttributeBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: AttrbuteTemplate(Of TBuilder)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder)
  name.vb: AttrbuteTemplate(Of TBuilder)
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1._attribute
  commentId: F:CZGL.Roslyn.Templates.AttrbuteTemplate`1._attribute
  id: _attribute
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: _attribute
  nameWithType: AttrbuteTemplate<TBuilder>._attribute
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>._attribute
  type: Field
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: _attribute
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 12
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  syntax:
    content: protected readonly AttributeState _attribute
    return:
      type: CZGL.Roslyn.States.AttributeState
    content.vb: Protected ReadOnly _attribute As AttributeState
  nameWithType.vb: AttrbuteTemplate(Of TBuilder)._attribute
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder)._attribute
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1._TBuilder
  commentId: F:CZGL.Roslyn.Templates.AttrbuteTemplate`1._TBuilder
  id: _TBuilder
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: _TBuilder
  nameWithType: AttrbuteTemplate<TBuilder>._TBuilder
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>._TBuilder
  type: Field
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: _TBuilder
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 14
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  syntax:
    content: protected TBuilder _TBuilder
    return:
      type: '{TBuilder}'
    content.vb: Protected _TBuilder As TBuilder
  nameWithType.vb: AttrbuteTemplate(Of TBuilder)._TBuilder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder)._TBuilder
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithName(System.String)
  commentId: M:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithName(System.String)
  id: WithName(System.String)
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: WithName(String)
  nameWithType: AttrbuteTemplate<TBuilder>.WithName(String)
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithName(System.String)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: WithName
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 22
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n要使用的特性类型\n<p>需要保证此特性已经存在</p>\n"
  example: []
  syntax:
    content: public virtual TBuilder WithName(string name)
    parameters:
    - id: name
      type: System.String
      description: 名称后缀不需要带上 Attribute
    return:
      type: '{TBuilder}'
    content.vb: Public Overridable Function WithName(name As String) As TBuilder
  overload: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithName*
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithName(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithName(System.String)
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor(System.String[])
  commentId: M:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor(System.String[])
  id: WithCtor(System.String[])
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: WithCtor(String[])
  nameWithType: AttrbuteTemplate<TBuilder>.WithCtor(String[])
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithCtor(System.String[])
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: WithCtor
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 43
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n设置构造函数中的参数\n<p>例如: [&quot;666&quot;,&quot;false&quot;,&quot;\\&quot;myname\\&quot;&quot;,&quot;new int[1,2,3]&quot;]</p>\n<example>\n<pre><code>&quot;666&quot;\nfalse\n&quot;myname&quot;\n&quot;new int[1,2,3]&quot;</code></pre>\n</example>\n"
  example: []
  syntax:
    content: public virtual TBuilder WithCtor(string[] params)
    parameters:
    - id: params
      type: System.String[]
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Overridable Function WithCtor(params As String()) As TBuilder
  overload: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor*
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithCtor(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithCtor(System.String())
  name.vb: WithCtor(String())
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor(System.String)
  commentId: M:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor(System.String)
  id: WithCtor(System.String)
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: WithCtor(String)
  nameWithType: AttrbuteTemplate<TBuilder>.WithCtor(String)
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithCtor(System.String)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: WithCtor
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 54
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n设置构造函数中的参数\n"
  example: []
  syntax:
    content: public virtual TBuilder WithCtor(string paramsCode)
    parameters:
    - id: paramsCode
      type: System.String
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Overridable Function WithCtor(paramsCode As String) As TBuilder
  overload: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor*
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithCtor(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithCtor(System.String)
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithProperty(System.String[])
  commentId: M:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithProperty(System.String[])
  id: WithProperty(System.String[])
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: WithProperty(String[])
  nameWithType: AttrbuteTemplate<TBuilder>.WithProperty(String[])
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithProperty(System.String[])
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: WithProperty
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 72
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n添加属性初始化\n<example>\n<pre><code>param1: false\nparam2:\\&quot;myname\\&quot;\nparam3: new int[]{1,2,3}()</code></pre>\n</example>\n"
  example: []
  syntax:
    content: public virtual TBuilder WithProperty(params string[] propertys)
    parameters:
    - id: propertys
      type: System.String[]
      description: ''
    return:
      type: '{TBuilder}'
      description: ''
    content.vb: Public Overridable Function WithProperty(ParamArray propertys As String()) As TBuilder
  overload: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithProperty*
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithProperty(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithProperty(System.String())
  name.vb: WithProperty(String())
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFullCode
  commentId: M:CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFullCode
  id: ToFullCode
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: ToFullCode()
  nameWithType: AttrbuteTemplate<TBuilder>.ToFullCode()
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.ToFullCode()
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: ToFullCode
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 84
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n完整输出代码\n<p>不会对代码进行检查，直接输出当前已经定义的代码</p>\n"
  example: []
  syntax:
    content: public abstract string ToFullCode()
    return:
      type: System.String
      description: 代码 <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    content.vb: Public MustOverride Function ToFullCode As String
  overload: CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFullCode*
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).ToFullCode()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).ToFullCode()
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFormatCode
  commentId: M:CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFormatCode
  id: ToFormatCode
  parent: CZGL.Roslyn.Templates.AttrbuteTemplate`1
  langs:
  - csharp
  - vb
  name: ToFormatCode()
  nameWithType: AttrbuteTemplate<TBuilder>.ToFormatCode()
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.ToFormatCode()
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: ToFormatCode
    path: src/Src/CZGL.Roslyn/Templates/AttrbuteTemplate`.cs
    startLine: 91
  assemblies:
  - CZGL.Roslyn
  namespace: CZGL.Roslyn.Templates
  summary: "\n完整输出格式化代码\n<p>会对代码进行语法树分析，检查代码是否有问题。如果无问题，再格式化代码输出</p>\n"
  example: []
  syntax:
    content: public abstract string ToFormatCode()
    return:
      type: System.String
      description: 代码 <xref href="System.String" data-throw-if-not-resolved="false"></xref>
    content.vb: Public MustOverride Function ToFormatCode As String
  overload: CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFormatCode*
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).ToFormatCode()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).ToFormatCode()
references:
- uid: CZGL.Roslyn.Templates
  commentId: N:CZGL.Roslyn.Templates
  name: CZGL.Roslyn.Templates
  nameWithType: CZGL.Roslyn.Templates
  fullName: CZGL.Roslyn.Templates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Roslyn.States.AttributeState
  commentId: T:CZGL.Roslyn.States.AttributeState
  parent: CZGL.Roslyn.States
  name: AttributeState
  nameWithType: AttributeState
  fullName: CZGL.Roslyn.States.AttributeState
- uid: CZGL.Roslyn.States
  commentId: N:CZGL.Roslyn.States
  name: CZGL.Roslyn.States
  nameWithType: CZGL.Roslyn.States
  fullName: CZGL.Roslyn.States
- uid: '{TBuilder}'
  commentId: '!:TBuilder'
  definition: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: TBuilder
  name: TBuilder
  nameWithType: TBuilder
  fullName: TBuilder
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithName*
  commentId: Overload:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithName
  name: WithName
  nameWithType: AttrbuteTemplate<TBuilder>.WithName
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithName
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithName
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor*
  commentId: Overload:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithCtor
  name: WithCtor
  nameWithType: AttrbuteTemplate<TBuilder>.WithCtor
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithCtor
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithCtor
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithCtor
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithProperty*
  commentId: Overload:CZGL.Roslyn.Templates.AttrbuteTemplate`1.WithProperty
  name: WithProperty
  nameWithType: AttrbuteTemplate<TBuilder>.WithProperty
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.WithProperty
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).WithProperty
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).WithProperty
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFullCode*
  commentId: Overload:CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFullCode
  name: ToFullCode
  nameWithType: AttrbuteTemplate<TBuilder>.ToFullCode
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.ToFullCode
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).ToFullCode
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).ToFullCode
- uid: CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFormatCode*
  commentId: Overload:CZGL.Roslyn.Templates.AttrbuteTemplate`1.ToFormatCode
  name: ToFormatCode
  nameWithType: AttrbuteTemplate<TBuilder>.ToFormatCode
  fullName: CZGL.Roslyn.Templates.AttrbuteTemplate<TBuilder>.ToFormatCode
  nameWithType.vb: AttrbuteTemplate(Of TBuilder).ToFormatCode
  fullName.vb: CZGL.Roslyn.Templates.AttrbuteTemplate(Of TBuilder).ToFormatCode
