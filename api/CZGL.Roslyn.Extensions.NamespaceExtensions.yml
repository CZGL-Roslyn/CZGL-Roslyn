### YamlMime:ManagedReference
items:
- uid: CZGL.Roslyn.Extensions.NamespaceExtensions
  commentId: T:CZGL.Roslyn.Extensions.NamespaceExtensions
  id: NamespaceExtensions
  parent: CZGL.Roslyn.Extensions
  children:
  - CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing(CZGL.Roslyn.NamespaceBuilder)
  langs:
  - csharp
  - vb
  name: NamespaceExtensions
  nameWithType: NamespaceExtensions
  fullName: CZGL.Roslyn.Extensions.NamespaceExtensions
  type: Class
  source:
    remote:
      path: src/Src/CZGL.Roslyn.Extensions/NamespaceExtensions.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: NamespaceExtensions
    path: src/Src/CZGL.Roslyn.Extensions/NamespaceExtensions.cs
    startLine: 12
  assemblies:
  - CZGL.Roslyn.Extensions
  namespace: CZGL.Roslyn.Extensions
  summary: "\n创建命名空间的拓展方法 <xref href=\"CZGL.Roslyn.NamespaceBuilder\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public static class NamespaceExtensions
    content.vb: Public Module NamespaceExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing(CZGL.Roslyn.NamespaceBuilder)
  commentId: M:CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing(CZGL.Roslyn.NamespaceBuilder)
  id: WithAutoUsing(CZGL.Roslyn.NamespaceBuilder)
  isExtensionMethod: true
  parent: CZGL.Roslyn.Extensions.NamespaceExtensions
  langs:
  - csharp
  - vb
  name: WithAutoUsing(NamespaceBuilder)
  nameWithType: NamespaceExtensions.WithAutoUsing(NamespaceBuilder)
  fullName: CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing(CZGL.Roslyn.NamespaceBuilder)
  type: Method
  source:
    remote:
      path: src/Src/CZGL.Roslyn.Extensions/NamespaceExtensions.cs
      branch: master
      repo: https://github.com/CZGL-Roslyn/CZGL-Roslyn.git
    id: WithAutoUsing
    path: src/Src/CZGL.Roslyn.Extensions/NamespaceExtensions.cs
    startLine: 20
  assemblies:
  - CZGL.Roslyn.Extensions
  namespace: CZGL.Roslyn.Extensions
  summary: "\n<strong>自动</strong>添加 using 命名空间\n"
  example: []
  syntax:
    content: public static NamespaceBuilder WithAutoUsing(this NamespaceBuilder builder)
    parameters:
    - id: builder
      type: CZGL.Roslyn.NamespaceBuilder
      description: ''
    return:
      type: CZGL.Roslyn.NamespaceBuilder
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function WithAutoUsing(builder As NamespaceBuilder) As NamespaceBuilder
  overload: CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CZGL.Roslyn.NamespaceBuilder
  commentId: T:CZGL.Roslyn.NamespaceBuilder
  parent: CZGL.Roslyn
  name: NamespaceBuilder
  nameWithType: NamespaceBuilder
  fullName: CZGL.Roslyn.NamespaceBuilder
- uid: CZGL.Roslyn.Extensions
  commentId: N:CZGL.Roslyn.Extensions
  name: CZGL.Roslyn.Extensions
  nameWithType: CZGL.Roslyn.Extensions
  fullName: CZGL.Roslyn.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CZGL.Roslyn
  commentId: N:CZGL.Roslyn
  name: CZGL.Roslyn
  nameWithType: CZGL.Roslyn
  fullName: CZGL.Roslyn
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing*
  commentId: Overload:CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing
  name: WithAutoUsing
  nameWithType: NamespaceExtensions.WithAutoUsing
  fullName: CZGL.Roslyn.Extensions.NamespaceExtensions.WithAutoUsing
